1。字符常量'\84'非法的原因：
C语言中规定，反斜杠是转义字符，单字符表示时，可以用反斜杠与8进制数组合来表示。\x表示后面的字符是十六进制数，\表示后面的字符是八进制数。
所以‘\101’只能是8进制，如果不是8进制，则会出错

2。"china" 占几个字节
C中规定char型格式占一个字节，所以应当是五个，但是因为结束字符'\0'(或'\00''\000'等等)占一位，所以总共为5+1六位字节

3.程序处理的对象是数据

4，对几个变量在定义时赋初值可以写成:int a=b=c=3;
不可以的  会有：error C2065: 'b' : undeclared identifier……
要写成定义的时候初始化，要分开写的
int a=3,b=3,c=3;
这样子，或者
int a,b,c;
a=b=c=3;

5，
自增运算符（++）或（--）只能用于变量，不能用于常量或表达式，

6，实型变量中允许存放整数型吗？
实型变量在C语言中用double类型来运算，double类型占用8个字节，int类型是4个字节，把4个字节的东西放到8个字节中，相当于四个人住进了八个人的房间
，当然是可以的。但是反过来，把double放到int里就是不行的了。语法上规定实型变量是不能存放整型类型的数据的，整型数据也不能存放实型数据。是为了避免类型转换
之间可能会发生的错误。

7. C语言编程：牛顿迭代法求方程的根
2*x*x*x-4*x*x+3*x-6=0

程序流程分析：
① 赋值x0＝1.5,即迭代初值； 
② 用初值x0代入方程中计算此时的f(x0)及f’(x0),程序中用变量f描述方程的值,用fd描述方程求导之后的值； 
③ 计算增量d=f/fd； 
④ 计算下一个x,x=x0-d; 
⑤ 把新产生的x替换x0,为下一次迭代做好准备; 
⑥ 若d绝对值大于1e-3,则重复②③④⑤步.
源程序代码：
#include 
main() 
{ 
float x,x0,d,f,fd; 
x0=0; 
do { 
f=2*x0*x0*x0-4*x0*x0+3*x0-6; 
fd=6*x0*x0-8*x0+3; 
d=f/fd; 
x=x0-d; 
x0=x; 
}while(fabs(d)>1e-3); 
printf("x=%f\n",x); 
}
